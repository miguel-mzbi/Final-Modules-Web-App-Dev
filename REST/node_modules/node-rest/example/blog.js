var API = require('../lib');
var _ = require('underscore');

// Global API Config
// Mainly used to create URI
// /:baseUrl/:version/:resource_name/...
API.configure({
  version: '1',
  format: 'json',
  baseUrl: 'api'
});

// Resource Post
// =================
/**
Per Resource based API config
@param resource_name {String}
@param config {Object} Overrides default API Config
*/
var Post = API.extend('post', {
  version: '2'
});

// Specific [Light] Middleware
function auth (err, req, next) {
  console.log('running auth');
  // accepts err
  next(err);
}

function someOtherAction (err, req, next) {
  console.log('some other middlewar');
  next(err);
}

/**
Define Resource Endpoint

@param err {Object} Error is propagated across the request chain
@param req {Object} Request Parameters, route parameters along with original req variables
 @param req.params {Object} request parameters
 @param req.route {Object} Strata route parameters
@param res {Function(err [, headers], data)} Automatically formats response as configured
*/
Post.get(':id', [auth, someOtherAction])
.on('req', function (err, req, res) {
  if (err) {
    res({
      code: 1001,
      msg: err.toString()
    });
  } else {
    res(null, {}, _.extend({}, req.params, {'postId': req.route.id})); //200
  }
});

// Resource Comment
// =================
var Comment = API.extend('comment');

Comment.get(':id', [auth, someOtherAction], function (err, req, res) {
  if (err) {
    res({
      code: 1001,
      msg: err.toString()
    });
  } else {
    res(null, {}, _.extend({}, req.params, {'postId': req.route.id})); //200
  }
});


/**
Define Resource Endpoint

@param err {Object} Error is propagated across the request chain
@param req {Object} Request Parameters, route parameters along with original req variables
 @param req.params {Object} request parameters
 @param req.route {Object} Strata route parameters
@param res {Function(err [, headers], data)} Automatically formats response as configured
*/
Comment.post('', function (err, req, res) {
  if (err) {
    res({
      code: 1001,
      msg: err.toString()
    });
  } else {
    res(null, _.extend({}, req.params, {'postId': req.route.id})); //200
  }
});

// Mounts Resource endopoints
API.mount([Post, Comment]);

// Use Strata Middlewares
API.use(API.cors);
API.use(API.contentType);
// API.use(API.contentLength);

// Starts Strata Server
API.run({port: 3000});